// Problem 4 test file

const assert = require('assert')
const resolve = require('./app4')

assert.deepStrictEqual(resolve([2,3,1,3,2,4,6,7,9,2,19], [2,1,4,3,9,6]), [2,2,2,1,4,3,3,9,6,7,19])
assert.deepStrictEqual(resolve([2,3,1,3,2,4,6,7,9,2,19], []), [1,2,2,2,3,3,4,6,7,9,19])
assert.throws(() => resolve([2,3,1,3,2,4,6,7,9,2,19,[]], [2,1,4,3,9,6]))
assert.throws(() => resolve([2,3,1,3,2,-4,6,7,9,2,19,[]], [2,1,-4,3,9,6]))
assert.throws(() => resolve([2,3,1,3,2,4,6,7,9,2,19,[]], [2,1,4,3,9,6]))
assert.throws(() => resolve())
assert.throws(() => resolve([2,3,1,3,2,4,6,7,9,2,19], [2,1,4,3,Infinity,6]))
assert.throws(() => resolve([2,3,1,3,2,4,6,7,9,2,19], [2,1,NaN,3,9,6]))
assert.throws(() => resolve([2,3,1,3,2,4,6,7,9,2,19], [2,true,4,3,9,6]))
assert.throws(() => resolve(['2',3,1,3,2,4,6,7,9,2,19], [2,1,4,3,9,6]))
assert.throws(() => resolve([], [2,1,4,3,9,6]))
assert.throws(() => resolve('array1', 1))
assert.throws(() => resolve(''))
assert.throws(() => resolve('string'))
assert.throws(() => resolve())
assert.throws(() => resolve([], null))
assert.throws(() => resolve(undefined, [1]))
assert.throws(() => resolve(NaN, [], []))
assert.throws(() => resolve([], true))
assert.throws(() => resolve(() => {}))
assert.throws(() => resolve(Infinity))
assert.throws(() => resolve(1n))